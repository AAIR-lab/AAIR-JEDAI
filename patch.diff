diff --git a/Explainer/Problem.py b/Explainer/Problem.py
index 3801e98..14bc5f8 100755
--- a/Explainer/Problem.py
+++ b/Explainer/Problem.py
@@ -304,7 +304,7 @@ class Problem:
                     [True for _ in failed_goals]
                 )
                 failed_prop = set([p.replace('(', '').replace(')', '') for p in failed_goals])
-                failure_cause = "The goal state is not achieved! " + failed_goals_display
+                failure_cause = failed_goals_display + " The goal state is not achieved! Please adjust your plan."
 
                 explanation_map["failure_cause"] = failure_cause
                 error_trace[failed_step - 1] = failure_cause
diff --git a/Explainer/explainer_server.py b/Explainer/explainer_server.py
index 6a6342b..9e04f1c 100755
--- a/Explainer/explainer_server.py
+++ b/Explainer/explainer_server.py
@@ -51,10 +51,6 @@ def generate_plan_string_from_explanation(plan, explanation_map,val_output):
     Check if HELM returns an error and then prune the output based on VAL's output
     '''
 
-    plan_length = len(plan.split(','))
-    explanation_map['total_actions'] = plan_length
-    explanation_map['exec_actions'] = plan_length
-
     if 'failed_precondition' in explanation_map.keys():        
 
         if val_output[0] != 'goal':
@@ -62,14 +58,8 @@ def generate_plan_string_from_explanation(plan, explanation_map,val_output):
             badActionStep = int(val_output[1])-1
             log.debug(f"badActionStep:{badActionStep}")
             plan = (',').join(plan[:badActionStep])
-            exec_length = len(plan[:badActionStep])
             log.debug(f"plan:{plan}")
             explanation_map['badStep'] = badActionStep
-            explanation_map['exec_actions'] = exec_length
-            explanation_map['err_code'] = "BAD ACTION"
-        else:
-            explanation_map['err_code'] = "GOAL ERROR"
-
 
     return explanation_map, plan
 
diff --git a/config.py b/config.py
index a70b437..5245161 100644
--- a/config.py
+++ b/config.py
@@ -5,8 +5,6 @@ STATIC_FILES_PATH = "./roblocks/static/roblocks"
 STATIC_IMAGES_PATH = STATIC_FILES_PATH + "/images"
 GOAL_IMAGE_STATIC_FILE = STATIC_IMAGES_PATH + "/goal.png"
 GOAL_IMAGE_NAME_IN_MODULES = "img.png"
-INIT_IMAGE_STATIC_FILE = STATIC_IMAGES_PATH + "/init.png"
-INIT_IMAGE_NAME_IN_MODULES = "init_img.png"
 PREBUILT_DOMAIN_FOLDERS = "./modules"
 SEMANTICS_FILE = "/semantics.json"
 DOMAIN_DOCUMENT_FILE = DOCUMENTS_PATH + "/domainD.pddl"
diff --git a/docs/source/domains.rst b/docs/source/domains.rst
index 4378c3d..8083115 100644
--- a/docs/source/domains.rst
+++ b/docs/source/domains.rst
@@ -96,7 +96,6 @@ The semantics file is used to generate "natural language" versions of actions an
       ],
       "actions": [
          {
-            "category": "<category_name>"
             "name": "<action_name>",
             "display": "<action_display>",
             "tooltip": "<info_to_show_on_hovering>",
@@ -119,13 +118,12 @@ Each template element that needs to be filled in is explained below:
 1. **<predicate_name>**: This is the name of the predicate used in the corresponding domain and problem files. The user will not necessarily see this.
 2. **<subject_index>**: This gives the (zero-based) index of the "subject" of the predicate. The subject of the predicate is whichever parameter would come before the "is" in a sentence describing that predicate.
 3. **<predicate_display>**: This is the text that would come after the "is" in a sentence describing the predicate. For example, if you wanted a full phrase like "plank1 is standing vertically", **<predicate_display>** would need to be "standing vertically". If there are more objects in your predicate, you should add those to this field as well. To make it so that the object for parameter at index **<index>** gets substituted into **<predicate_display>**, include that index between a pair of double percent signs in the string, like so: "%%\ **<index>**\ %%".
-4. **<action_category>**: This is the category of the action used to bin the actions in the action selection list. The user will see this name in the list.
-5. **<action_name>**: This is the name of the action used in the corresponding domain and problem files. The user will not necessarily see this.
-6. **<action_display>**: This is the initial part of any natural language meant to encapsulate this action. It should consist of anything needed to indicate which action is being discussed before the parameters are introduced. For example, to get the sentence "Pick up plank plank1 with robot yumi using gripper left", the **<action_display>** should be "Pick up".
-7. **<info_to_show_on_hovering>**: This is a longer-form generic description of the action that pops up when a user hovers their mouse over an action block.
-8. **<parameter_index>**: This gives the (zero-based) index of this parameter in the domain and problem files. Note that the order of parameters in the action blocks and generated natural language text does not look at this - instead it uses the order of the parameters in the semantics file array.
-9. **<text_to_show_before_dropdown>**: This is the text that is shown just to the left of the dropdown for this parameter in the action block. For the first parameter in the array (and thus in the action block) this will usually look something like "this **<parameter_type>**\ ", where **<parameter_type>** is the type of the first parameter. Every other parameter should include some text before the type that explains how the object is involved in the action. See the included domains for clarifying examples.
-10. **<text_to_show_in_explanations>**: This is the text that immediately precedes the name of the object that has been instantiated for this parameter when the action shows up in an explanation. Will usually be similar to **<text_to_show_before_dropdown>**, but without any "this" in the string. Again, see the included domains for clarification.
+4. **<action_name>**: This is the name of the action used in the corresponding domain and problem files. The user will not necessarily see this.
+5. **<action_display>**: This is the initial part of any natural language meant to encapsulate this action. It should consist of anything needed to indicate which action is being discussed before the parameters are introduced. For example, to get the sentence "Pick up plank plank1 with robot yumi using gripper left", the **<action_display>** should be "Pick up".
+6. **<info_to_show_on_hovering>**: This is a longer-form generic description of the action that pops up when a user hovers their mouse over an action block.
+7. **<parameter_index>**: This gives the (zero-based) index of this parameter in the domain and problem files. Note that the order of parameters in the action blocks and generated natural language text does not look at this - instead it uses the order of the parameters in the semantics file array.
+8. **<text_to_show_before_dropdown>**: This is the text that is shown just to the left of the dropdown for this parameter in the action block. For the first parameter in the array (and thus in the action block) this will usually look something like "this **<parameter_type>**\ ", where **<parameter_type>** is the type of the first parameter. Every other parameter should include some text before the type that explains how the object is involved in the action. See the included domains for clarifying examples.
+9. **<text_to_show_in_explanations>**: This is the text that immediately precedes the name of the object that has been instantiated for this parameter when the action shows up in an explanation. Will usually be similar to **<text_to_show_before_dropdown>**, but without any "this" in the string. Again, see the included domains for clarification.
 
 
 |
diff --git a/modules/Cafe World/Deliver Cans/init_img.png b/modules/Cafe World/Deliver Cans/init_img.png
deleted file mode 100644
index 8e6b9ae..0000000
Binary files a/modules/Cafe World/Deliver Cans/init_img.png and /dev/null differ
diff --git a/modules/Cafe World/semantics.json b/modules/Cafe World/semantics.json
index 8f28827..76e86aa 100644
--- a/modules/Cafe World/semantics.json	
+++ b/modules/Cafe World/semantics.json	
@@ -23,7 +23,6 @@
     ],
     "actions": [
       {
-        "category":"Move robot",
         "name": "move",
         "display": "Move",
         "tooltip": "Use this action to move the robot to a specified location",
@@ -41,7 +40,6 @@
         ]
       },
       {
-        "category":"Pick Up",
         "name": "grasp",
         "display": "Pick up",
         "tooltip": "Use this action to pick up an object from a location using the gripper.",
@@ -69,7 +67,6 @@
         ]
       },
       {
-        "category":"Place",
         "name": "put",
         "display": "Place",
         "tooltip": "Use this action to place the object at a specified location using the gripper.",
diff --git a/modules/Delicate Cans/10 Cans/init_img.png b/modules/Delicate Cans/10 Cans/init_img.png
deleted file mode 100644
index 9197798..0000000
Binary files a/modules/Delicate Cans/10 Cans/init_img.png and /dev/null differ
diff --git a/modules/Delicate Cans/semantics.json b/modules/Delicate Cans/semantics.json
index a6dea00..bf8b0dc 100644
--- a/modules/Delicate Cans/semantics.json	
+++ b/modules/Delicate Cans/semantics.json	
@@ -23,7 +23,6 @@
     ],
     "actions": [
       {
-        "category":"Pick Up",
         "name": "grasp",
         "display": "Pick up",
         "tooltip": "Use this action to pick up an object from a location using the gripper.",
@@ -52,7 +51,6 @@
         ]
       },
       {
-        "category":"Place",
         "name": "put",
         "display": "Place",
         "tooltip": "Use this action to place the object at a specified location using the gripper.",
diff --git a/modules/Dominos/15 Domino Stack/init_img.png b/modules/Dominos/15 Domino Stack/init_img.png
deleted file mode 100644
index 8f93c17..0000000
Binary files a/modules/Dominos/15 Domino Stack/init_img.png and /dev/null differ
diff --git a/modules/Dominos/semantics.json b/modules/Dominos/semantics.json
index df3e47c..2ecb36b 100644
--- a/modules/Dominos/semantics.json
+++ b/modules/Dominos/semantics.json
@@ -18,7 +18,6 @@
     ],
     "actions": [
       {
-      "category":"Pick Up",
         "name": "pick",
         "display": "Pick up",
         "tooltip": "Use this action to pick up a domino",
diff --git a/modules/Keva Planks/Double Pi/init_img.png b/modules/Keva Planks/Double Pi/init_img.png
deleted file mode 100644
index 991da59..0000000
Binary files a/modules/Keva Planks/Double Pi/init_img.png and /dev/null differ
diff --git a/modules/Keva Planks/Easy problem/init_img.png b/modules/Keva Planks/Easy problem/init_img.png
deleted file mode 100644
index 991da59..0000000
Binary files a/modules/Keva Planks/Easy problem/init_img.png and /dev/null differ
diff --git a/modules/Keva Planks/Single Pi/init_img.png b/modules/Keva Planks/Single Pi/init_img.png
deleted file mode 100644
index 991da59..0000000
Binary files a/modules/Keva Planks/Single Pi/init_img.png and /dev/null differ
diff --git a/modules/Keva Planks/Spiral Tower/init_img.png b/modules/Keva Planks/Spiral Tower/init_img.png
deleted file mode 100644
index 991da59..0000000
Binary files a/modules/Keva Planks/Spiral Tower/init_img.png and /dev/null differ
diff --git a/modules/Keva Planks/Three Pi/init_img.png b/modules/Keva Planks/Three Pi/init_img.png
deleted file mode 100644
index 991da59..0000000
Binary files a/modules/Keva Planks/Three Pi/init_img.png and /dev/null differ
diff --git a/modules/Keva Planks/semantics.json b/modules/Keva Planks/semantics.json
index 97f10d6..6f986aa 100644
--- a/modules/Keva Planks/semantics.json	
+++ b/modules/Keva Planks/semantics.json	
@@ -58,7 +58,6 @@
   ],
   "actions": [
     {
-      "category":"Pick Up",
       "name": "pickUp_plank_from_table",
       "display": "Pick up",
       "tooltip": "Use this action to pick up the selected plank from the table with the selected gripper. A gripper can only hold one plank at a time!",
@@ -81,7 +80,6 @@
       ]
     },
     {
-      "category":"Place vertical",
       "name": "putDown_plank_vertical_onTable",
       "display": "Put on table vertically",
       "tooltip": "Use this action to put the selected plank on the table, such that it stands vertically. The selected gripper has to be holding the plank before it can place it!",
@@ -104,7 +102,6 @@
       ]
     },
     {
-      "category":"Place sideways",
       "name": "putDown_plank_sideways_onTable",
       "display": "Put on table sideways",
       "tooltip": "Use this action to put the selected plank on the table, such that it lies on its side. The selected gripper has to be holding the plank before it can place it!",
@@ -127,7 +124,6 @@
       ]
     },
     {
-      "category":"Place horizontal",
       "name": "putDown_plank_horizontal_onPlank",
       "display": "Stack horizontally",
       "tooltip": "Use this action to put the selected plank on top of another plank, such that it lies horizontally. The selected gripper has to be holding the plank before it can place it!",
@@ -155,7 +151,6 @@
       ]
     },
     {
-      "category":"Place vertical",
       "name": "putDown_plank_vertical_onPlank",
       "display": "Stack vertically",
       "tooltip": "Use this action to put the selected plank on top of another plank, such that it stands vertically. The selected gripper has to be holding the plank before it can place it!",
@@ -183,7 +178,6 @@
       ]
     },
     {
-      "category":"Place sideways",
       "name": "putDown_plank_sideways_onPlank",
       "display": "Stack sideways",
       "tooltip": "Use this action to put the selected plank on top of another (single) plank, such that the placed plank lies on its side. The selected gripper has to be holding the plank before it can place it!",
@@ -211,7 +205,6 @@
       ]
     },
     {
-      "category":"Place horizontal",
       "name": "putDown_plank_horizontal_onDoublePlank_both_horizontal",
       "display": "Stack horizontally on two horizontal planks",
       "tooltip": "Use this action to put the selected plank on top of two other planks that are horizontal, such that the placed plank lies horizontally. The selected gripper has to be holding the plank before it can place it!",
@@ -244,7 +237,6 @@
       ]
     },
     {
-      "category":"Place sideways",
       "name": "putDown_plank_sideways_onDoublePlank_both_horizontal",
       "display": "Stack sideways on two horizontal planks",
       "tooltip": "Use this action to put the selected plank on top of two other planks that are horizontal, such that the placed plank lies on its side. The selected gripper has to be holding the plank before it can place it!",
@@ -277,7 +269,6 @@
       ]
     },
     {
-      "category":"Place horizontal",
       "name": "putDown_plank_horizontal_onDoublePlank_both_vertical",
       "display": "Stack horizontally on two vertical planks",
       "tooltip": "Use this action to put the selected plank on top of two other planks that are vertical, such that the placed plank lies horizontally. The selected gripper has to be holding the plank before it can place it!",
@@ -310,7 +301,6 @@
       ]
     },
     {
-      "category":"Place sideways",
       "name": "putDown_plank_sideways_onDoublePlank_both_vertical",
       "display": "Stack sideways on two vertical planks",
       "tooltip": "Use this action to put the selected plank on top of two other planks that are vertical, such that the placed plank lies on its side. The selected gripper has to be holding the plank before it can place it!",
@@ -343,7 +333,6 @@
       ]
     },
     {
-      "category":"Place horizontal",
       "name": "putDown_plank_horizontal_onDoublePlank_both_sideways",
       "display": "Stack horizontally on two sideways planks",
       "tooltip": "Use this action to put the selected plank on top of two other planks that are sideways, such that the placed plank lies horizontally. The selected gripper has to be holding the plank before it can place it!",
@@ -376,7 +365,6 @@
       ]
     },
     {
-      "category":"Place sideways",
       "name": "putDown_plank_sideways_onDoublePlank_both_sideways",
       "display": "Stack sideways on two sideways planks",
       "tooltip": "Use this action to put the selected plank on top of two other planks that are sideways, such that the placed plank lies on its side as well. The selected gripper has to be holding the plank before it can place it!",
diff --git a/modules/Stack of Towers/Stack Two/init_img.png b/modules/Stack of Towers/Stack Two/init_img.png
deleted file mode 100644
index 8c44bd8..0000000
Binary files a/modules/Stack of Towers/Stack Two/init_img.png and /dev/null differ
diff --git a/modules/Stack of Towers/Unstack/init_img.png b/modules/Stack of Towers/Unstack/init_img.png
deleted file mode 100644
index 8c44bd8..0000000
Binary files a/modules/Stack of Towers/Unstack/init_img.png and /dev/null differ
diff --git a/modules/Stack of Towers/semantics.json b/modules/Stack of Towers/semantics.json
index f7c1df2..806fc85 100644
--- a/modules/Stack of Towers/semantics.json	
+++ b/modules/Stack of Towers/semantics.json	
@@ -18,7 +18,6 @@
     ],
     "actions": [
       {
-        "category":"Move",
         "name": "move",
         "display": "Move",
         "tooltip": "Use this action to move a box (with nothing on top) from one place to another. Boxes can go on top of empty locations or on top other boxes that don't already have another box on top.",
diff --git a/modules/Tower of Hanoi/Hanoi problem/init_img.png b/modules/Tower of Hanoi/Hanoi problem/init_img.png
deleted file mode 100644
index 8c44bd8..0000000
Binary files a/modules/Tower of Hanoi/Hanoi problem/init_img.png and /dev/null differ
diff --git a/modules/Tower of Hanoi/semantics.json b/modules/Tower of Hanoi/semantics.json
index f7c1df2..806fc85 100644
--- a/modules/Tower of Hanoi/semantics.json	
+++ b/modules/Tower of Hanoi/semantics.json	
@@ -18,7 +18,6 @@
     ],
     "actions": [
       {
-        "category":"Move",
         "name": "move",
         "display": "Move",
         "tooltip": "Use this action to move a box (with nothing on top) from one place to another. Boxes can go on top of empty locations or on top other boxes that don't already have another box on top.",
diff --git a/roblocks/static/roblocks/blockGeneration.js b/roblocks/static/roblocks/blockGeneration.js
index b75e5c3..bd66d88 100755
--- a/roblocks/static/roblocks/blockGeneration.js
+++ b/roblocks/static/roblocks/blockGeneration.js
@@ -49,15 +49,7 @@ function generateActionBlocks(actions, objects, semantics, typesToSupertypes) {
         };
         const xml = '<block type="' + blockName + '"></block>';
         // TODO handle category names better
-        let toolbox=document.getElementById('Actions');
-        if (document.getElementById(actionSemantics.category) == null){
-            let element = document.createElement('category');
-            element.id = actionSemantics.category;
-            element.setAttribute('name', actionSemantics.category);
-            toolbox.append(element);
-        }
-        $('[name="'+actionSemantics.category+'"]').append(xml);
-
+        $('[name="Actions"]').append(xml);
     });
     const step = 90 / (actions.length*0.5);
     let color = 90;
diff --git a/roblocks/static/roblocks/planSubmission.js b/roblocks/static/roblocks/planSubmission.js
index f156e29..9489892 100755
--- a/roblocks/static/roblocks/planSubmission.js
+++ b/roblocks/static/roblocks/planSubmission.js
@@ -2,8 +2,13 @@ var lastBadBlock = {
     "block":null,
     "colour":null
 }
-
-function unsetBadBlock(){
+function submitPlan(plan)
+{
+    let loader = document.getElementById("submission-loader");
+    loader.style.display = "block";
+    clearMsg('status'); // only clear the tmp status. Leave the explainer status intact.
+    
+    // Unset bad block colour if it was ever set
     if (lastBadBlock['block'] !== null){
         if (workspace.getBlockById(lastBadBlock['block'].id) !== null){
             lastBadBlock['block'].setColour(lastBadBlock['colour']);
@@ -11,39 +16,6 @@ function unsetBadBlock(){
             lastBadBlock['colour'] = null;
         }
     }
-}
-
-function call_tmp(){
-    console.log("Calling TMP...")
-    $.ajax({
-        url: "start_TMP",
-        type: "GET"
-    }).done(function(data) { 
-        console.log("TMP started again");
-    })
-}
-
-// Terminate the execution by killing TMP process
-function terminateExec(){
-    let terminateBtn = document.getElementById('stopExecBtn');
-    terminateBtn.disabled = true;
-    $.ajax({
-        url: 'terminate_tmp',
-        type: 'GET'
-    }).done(function(data){
-        call_tmp();
-    });
-}
-
-function submitPlan(plan)
-{   
-    let terminateBtn = document.getElementById('stopExecBtn');
-    terminateBtn.disabled = false;
-    let loader = document.getElementById("submission-loader");
-    loader.style.display = "block";
-    clearMsg('status'); // only clear the tmp status. Leave the explainer status intact.
-    
-    unsetBadBlock();
 
     let plan_all = "";
     for(let a = 0; a < plan.length; a++){
@@ -52,14 +24,22 @@ function submitPlan(plan)
             plan_all += ",";
     }
 
+    let call_tmp = function() {
+        console.log("Calling TMP...")
+        $.ajax({
+            url: "start_TMP",
+            type: "GET"
+        }).done(function(data) { 
+            console.log("TMP started again");
+        })
+    }
+
     $.ajax({
         url: "plan_submit",
         type: 'GET',
         data: { plan: plan_all },
     }).done(function(data) {
         plan_all = data.execution_plan;
-        let total_actions = data.explanation_map.total_actions;
-        let executable_actions = data.explanation_map.exec_actions;
         if (data.success === "True") {
             let successCallMsg = "VALID: Plan correct! TMP will execute all the actions."
             showMsg(successCallMsg, "pass","explainer_status");
@@ -73,12 +53,12 @@ function submitPlan(plan)
                     let theBlocks = workspace.getAllBlocks(true);
                     lastBadBlock['block'] = theBlocks[badStep+1];
                     lastBadBlock['colour'] = theBlocks[badStep+1].getColour();
-                    lastBadBlock['block'].setColour("#EC2020");
+                    lastBadBlock['block'].setColour("#793535");
                 }
             }
 
             loader.style.display = "none";
-            let failureCallMsg = data.explanation_map.err_code+": "+data.explanation_map["failure_cause"]; //"ERROR: Plan is only partially correct. "
+            let failureCallMsg = "ERROR: Plan is only partially correct. " + data.explanation_map["failure_cause"];
             showMsg(failureCallMsg , "fail","explainer_status");
             explainer_success = "fail";
         }
@@ -104,8 +84,8 @@ function submitPlan(plan)
                     type: 'GET',
                     beforeSend: alert(finishedComputingAlert)
                 }).done(function(data) {
-                    let tmpCompletionAlert = "Executed "+executable_actions+" of "+total_actions+" action(s) successfully! Close this alert to reset the 3D environment.";
-                    let tmpCompletionMsg = "INFO: Plan execution complete! "+"Number of actions executed: "+executable_actions+"/"+total_actions;
+                    let tmpCompletionAlert = "Plan executed successfully! Close this alert to reset the 3D environment.";
+                    let tmpCompletionMsg = "INFO: Plan execution complete!";
                     showMsg(tmpCompletionMsg, "inprogress","status");
                     $.ajax({
                         url: 'kill_tmp',
@@ -123,7 +103,6 @@ function submitPlan(plan)
                 call_tmp();
             }
             loader.style.display = "none";
-            terminateBtn.disabled = true;
                 });
             }
     });
diff --git a/roblocks/static/roblocks/style.css b/roblocks/static/roblocks/style.css
index c6044a9..672b110 100755
--- a/roblocks/static/roblocks/style.css
+++ b/roblocks/static/roblocks/style.css
@@ -75,8 +75,7 @@ form {
 }
 
 .pass{
-  background-color: #648FFF;
-  /* background-color: #5b7935; */
+  background-color: #5b7935;
   border-radius: 5px;
 	text-align: center;
 	margin-left: 20px;
@@ -96,8 +95,7 @@ form {
 }
 
 .fail{
-  background-color: #EC2020;
-  /* background-color: #793535; */
+  background-color: #793535;
   border-radius: 5px;
 	text-align: center;
 	margin-left: 20px;
diff --git a/roblocks/templates/roblocks/training-area.html b/roblocks/templates/roblocks/training-area.html
index aaf376a..8d4ae02 100755
--- a/roblocks/templates/roblocks/training-area.html
+++ b/roblocks/templates/roblocks/training-area.html
@@ -18,11 +18,12 @@
         float: left;
         padding: 20px;
     }
-    .fig-pos {
-        display: flex;
-        justify-content: center;
-        align-items: center;
-        max-height: fit-content;
+    .vertical-center {
+        margin: 0;
+        position: absolute;
+        top: 50%;
+        -ms-transform: translateY(-50%);
+        transform: translateY(-50%);
     }
     figcaption {
         font-style: italic;
@@ -60,19 +61,16 @@
 </script>
 <body onload="getBlocks()" >
    <xml id="toolbox" style="display: none">
-    <category id="Actions" name="Actions" hidden="true"></category>
+	<category name="Actions"></category>
 	</xml>
     <div class="playGround container" style="min-width: 1150px;">
         <div class="row questionBlock" style="min-width: 100%;">
             <div class="col-sm-3">
-                 <button type="button" style="margin-top:5px; margin-bottom:5px;" class="btn btn-success" onclick="sendPlan()" style="margin-bottom:20px;">Submit Plan</button>
-             </div>
-            <div class="col-sm-6">
-                <p id="question">Goal State: {{goal_str}}</p>
+                <button type="button" style="margin-top:5px; margin-bottom:5px;" class="btn btn-success" onclick="sendPlan()" style="margin-bottom:20px;">Submit Plan</button>
+            </div>
+            <div class="col-sm-9">
+                <p id="question">Goal state: {{goal_str}}</p>
             </div>
-            <div class="col-sm-3" style="justify-content: flex-end; display: flex;">
-                <button type="button" id="stopExecBtn" style="margin-top:5px; margin-bottom:5px;" class="btn btn-danger" onclick="terminateExec()" style="margin-bottom:20px;" disabled>Stop Execution</button>
-             </div>
         </div>
         <div id="explainer_status" class="row statusBlock" style="min-width: 100%;">
         </div>
@@ -82,13 +80,9 @@
             <div id="blocklyDiv" class="float-child" style="height: 100%; min-width:700px;">
             </div>
             <div class="float-child" style="height: 100%; position: relative; width: 30%;">
-                <figcaption class="fig-pos" style="max-width: 70%;">Start state configuration</figcaption>
-                <figure class="fig-pos" style="max-width: 75%;">
-                <img src="{% static "roblocks/images/init.png" %}"  alt="Initial state image" >
-                </figure>
-                <figcaption class="fig-pos" style="max-width: 70%;">Expected goal state configuration</figcaption>
-                <figure class="fig-pos" style="max-width: 75%;">
-                <img src="{% static "roblocks/images/goal.png" %}"  alt="Goal state image" >
+                <figure class="vertical-center" style="max-width: 90%;">
+                <img src="{% static "roblocks/images/goal.png" %}"  alt="Goal Image" >
+                <figcaption>Goal Image</figcaption>
             </figure>
             </div>
         </div>
diff --git a/roblocks/urls.py b/roblocks/urls.py
index 6802ac3..b43783c 100755
--- a/roblocks/urls.py
+++ b/roblocks/urls.py
@@ -14,7 +14,6 @@ urlpatterns = [
     path("start_TMP/", views.start_tmp, name="start_TMP"),
     path("run_plan/", views.run_plan, name="run_plan"),
     path("kill_tmp/", views.kill_tmp, name="kill_tmp"),
-    path("terminate_tmp/", views.terminate_tmp, name="terminate_tmp"),
     path("get_problem_names/", views.get_problem_file_names, name="get_problem_names")
 
 ]
diff --git a/roblocks/views.py b/roblocks/views.py
index 4d08fea..d70bcbf 100755
--- a/roblocks/views.py
+++ b/roblocks/views.py
@@ -135,13 +135,6 @@ def kill_tmp(request):
     cs.close()
     return JsonResponse({})
 
-# /terminate_tmp
-def terminate_tmp(request):
-    log.debug("Entering /terminate_tmp endpoint")
-    log.debug("Force killing tmp process")
-    _try_to_kill_tmp_and_close_socket()
-    return JsonResponse({})
-
 
 # /get_problem_names
 def get_problem_file_names(request):
@@ -190,7 +183,7 @@ def _handle_post_request_to_upload_view(request):
             'code': 404,
             'form': form,
         })
-    _save_images_to_static_files(request.POST['domain'], request.POST['problem'])
+    _save_goal_image_to_static_files(request.POST['domain'], request.POST['problem'])
     _set_file_instance_names(form, files)
     _write_template_files()
     domain_name = _get_domain_name_from_documents()
@@ -205,16 +198,8 @@ def _handle_post_request_to_upload_view(request):
     return _get_blockly_render(request, form, semantics_json)
 
 
-def _save_images_to_static_files(domain_path, problem_name):
-    init_image_for_this_domain = domain_path + "/" + problem_name + "/" + config.INIT_IMAGE_NAME_IN_MODULES
+def _save_goal_image_to_static_files(domain_path, problem_name):
     goal_image_for_this_domain = domain_path + "/" + problem_name + "/" + config.GOAL_IMAGE_NAME_IN_MODULES
-    if os.path.exists(config.INIT_IMAGE_STATIC_FILE):
-        os.remove(config.INIT_IMAGE_STATIC_FILE)
-    if os.path.exists(init_image_for_this_domain):
-        image = Image.open(init_image_for_this_domain)
-        image_copy = image.copy()
-        image_copy.save(config.INIT_IMAGE_STATIC_FILE)
-    
     if os.path.exists(config.GOAL_IMAGE_STATIC_FILE):
         os.remove(config.GOAL_IMAGE_STATIC_FILE)
     if os.path.exists(goal_image_for_this_domain):
