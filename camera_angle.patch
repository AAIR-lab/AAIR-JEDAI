diff --git a/src/States/OpenRaveLowLevelState.py b/src/States/OpenRaveLowLevelState.py
index e78642e..bdb83c5 100755
--- a/src/States/OpenRaveLowLevelState.py
+++ b/src/States/OpenRaveLowLevelState.py
@@ -24,12 +24,42 @@ class OpenRaveLowLevelState(State):
         self.simulator = OpenRaveSimulator(Config.OPENRAVE_ENV_XML)
         if values is None:
             self.values = self.get_values_from_env(self.simulator.env)
+            self.setup_initial_camera_view()
         else:
             self.values = values
         self.history = []
         self.ll_history = []
         self.ll_variables = {}
 
+    def setup_initial_camera_view(self):
+                    
+        assert self.values is not None
+        assert isinstance(self.values, dict)
+        
+        assert self.simulator is not None
+        assert self.simulator.env is not None
+        viewer = self.simulator.env.GetViewer()
+        
+        if "objects" in self.values and "table_blue" in self.values["objects"]:
+        
+            # Cafeworld camera angle setup.    
+            viewer.SetCamera(
+                [[ -1.26668234e-02,   7.10505939e-01,  -7.03577190e-01, 8.80096436e+00],
+                 [  9.99905994e-01,   5.30663706e-03,  -1.26428709e-02, -4.04841423e+00],
+                 [ -5.24920604e-03,  -7.03671195e-01,  -7.10506366e-01, 7.85888958e+00],
+                 [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00, 1.00000000e+00]])
+        elif "robots" in self.values and "yumi" in self.values["robots"]:
+            
+            # Keva camera angle setup.
+            viewer.SetCamera(
+                [[ 0.01124211,  0.48109715, -0.8765952 ,  1.10629892],
+                 [ 0.99988877,  0.00318416,  0.01457086, -0.05577996],
+                 [ 0.00980122, -0.8766615 , -0.48100784,  0.82077068],
+                 [ 0.        ,  0.        ,  0.        ,  1.        ]])
+        else:
+            
+            pass
+
 
     def set_values(self, vals):
         self.values = vals
