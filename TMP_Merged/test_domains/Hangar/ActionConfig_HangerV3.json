{
  "_comments": [
    "HL_ARGS should be in the same order as declared in PDDL",
    "If no generator is provided for LL_ARGS it will check for the value in HL_ARGS with the same name",
    "The sequence is important"
  ],
  "ignore_hl_actions": [
    "init",
    "done",
    "stop",
    "first",
    "second",
    "third",
    "alert",
    "human_confirm",
    "handshake",
    "inspect_part1",
    "joint_inspect",
    "done"
  ],
  "non_removable_bodies": [
  ],
  "config_map": {
    "move": {
      "HL_ARGS": [
        "agent",
        "traj",
        "startLoc",
        "endLoc"
      ],
      "LL_ARGS": {
        "agent": [],
        "startLoc": [],
        "endLoc" : [],
        "cpose" : ["UAVCurrentPoseGenerator","BasePose"],
        "endpose" : ["TargetPoseGenerator","MoveTarget"],
        "traj": ["TrajectoryGenerator","BaseTrajectory"],
        "battery" : ["CurrentBatteryLevelGenerator","BatteryLevel"]
      },
      "precondition" : [
        "isCurrentPose(agent,cpose)",
        "isTargetPose(agent,endpose)",
        "isTrajectory(agent,pose_current:cpose,pose_end:endpose,traj)",
        "IsBatterySufficient(agent,trajectory:traj)"
      ],
      "effect" : [],
      "execution_sequence" : ["traj"]
    },
    "inspect_part2" : {
      "HL_ARGS" : [
        "agent",
        "sensor",
        "endLoc",
        "traj"
      ],
      "LL_ARGS" : {
        "agent" : [],
        "sensor" : [],
        "endLoc" : [],
        "cpose" : ["UAVCurrentPoseGenerator","BasePose"],
        "endpose" : ["TargetPoseGenerator","InspectTarget"],
        "traj" : ["TrajectoryGenerator","InspectTrajectory"]
      },
      "precondition" : [
        "isCurrentPose(agent,cpose)",
        "isTargetPose(agent,endpose)",
        "isTrajectory(agent,pose_current:cpose,pose_end:endpose,traj)",
        "IsBatterySufficient(agent,trajectory:traj)"
      ],
      "effect":[],
      "execution_sequence" : ["traj"]
    },
    "recharge" : {
      "HL_ARGS" : [
        "agent"
      ],
      "LL_ARGS" : {
        "agent" : []
      },
      "precondition" : {},
      "effect" : [
        "BatterySufficient(agent)"
      ]
    }
  }
}