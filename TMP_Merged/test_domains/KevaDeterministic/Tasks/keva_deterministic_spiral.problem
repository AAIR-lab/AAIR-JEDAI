(define (problem keva-problem)
(:domain keva)
(:objects plank1 plank2 plank3 plank4 plank5 plank6 plank7 plank8 plank9 plank10 plank11 plank12 plank13 plank14 - plank
 region_1, region_2, region_3 - region
 yumi - robot
)



(:init

		(free location2)
       (handempty)

)

(:goal (and (onTable plank1)
			(orientation plank1 horizontal)
			(onTable plank2)
			(orientation plank2 horizontal)
			(onDoublePlank plank3 plank1 plank2)
			(orientation plank3 horizontal)
			(onDoublePlank plank4 plank1 plank2)
			(orientation plank4 horizontal)
			(not (clearPlank plank1))
			(not (clearPlank plank2))
			(onDoublePlank plank5 plank3 plank4)
			(orientation plank5 horizontal)
			(onDoublePlank plank6 plank3 plank4)
			(orientation plank6 horizontal)
			(not (clearPlank plank3))
			(not (clearPlank plank4))
			(onDoublePlank plank7 plank5 plank6)
			(orientation plank7 horizontal)
			(onDoublePlank plank8 plank5 plank6)
			(orientation plank8 horizontal)
			(not (clearPlank plank5))
			(not (clearPlank plank6))
			(onDoublePlank plank9 plank7 plank8)
			(orientation plank9 horizontal)
			(onDoublePlank plank10 plank7 plank8)
			(orientation plank10 horizontal)
			(not (clearPlank plank7))
			(not (clearPlank plank8))
			(onDoublePlank plank11 plank9 plank10)
			(orientation plank11 horizontal)
			(onDoublePlank plank12 plank9 plank10)
			(orientation plank12 horizontal)
			(not (clearPlank plank9))
			(not (clearPlank plank10))
			(onDoublePlank plank13 plank11 plank12)
			(orientation plank13 horizontal)
			(onDoublePlank plank14 plank11 plank12)
			(orientation plank14 horizontal)
			(not (clearPlank plank11))
			(not (clearPlank plank12))


)))